{"version":3,"sources":["mainStore.js","todos/NewTodoForm.js","todos/TodoListItem.js","todos/TodoList.js","todos/CompleteTodoListItem.js","todos/TodoListComplete.js","todos/UserController.js","NavBar.js","todos/LoginForm.js","todos/SignupForm.js","App.js","index.js"],"names":["initialState","dateToDo","title","activeToDOList","username","currentUser","fetchToDoLists","dispatch","fetch","then","resp","json","type","payload","mainFunction","prevState","action","console","log","id","map","todoList","filter","NewTodoForm","state","user_id","status","handleChange","event","setState","target","name","value","handleAddNewTask","preventDefault","data","props","method","headers","body","JSON","stringify","errors","alert","createNewTodo","this","className","onSubmit","placeholder","onChange","Component","connect","TodoListItem","handleDelete","deleteTodo","markAsCompleted","completedTask","targetItem","onClick","TodoList","fetchTodos","todo","CompleteTodoListItem","TodoListComplete","UserController","logout","to","NavBar","LoginForm","password","handleSubmit","e","res","response","setUser","class","React","SignupForm","passwordConfirmation","user","email","phone","App","localStorage","token","history","push","removeItem","fetchAllTodo","fixed","path","render","routerProps","connectTodolist","loginUser","logoutUser","store","createStore","mainStore","applyMiddleware","thunk","ReactDOM","component","document","getElementById"],"mappings":"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","file":"static/js/main.46c70ece.chunk.js","sourcesContent":["\nconst initialState = {\n    dateToDo: '',\n    title: '',\n    activeToDOList: [],\n    username: '',\n    currentUser:''\n\n}\n\nexport const fetchToDoLists = () => dispatch => {\n    fetch('https://sekoudossocalendar.herokuapp.com/api/v1/tasks')\n    // fetch('http://localhost:3000/api/v1/tasks')\n    .then(resp => resp.json())\n    .then(activeToDOList => {\n        dispatch({type: 'FETCH_TO_DO_LISTS', payload: { activeToDOList }})\n    })\n} \nfunction mainFunction (prevState=initialState, action)  {\n\n    switch (action.type) {\n        case 'LOGIN_USER':\n            return {...prevState, currentUser: action.payload}\n\n        case 'LOGOUT_USER':\n            return {...prevState, currentUser: action.payload}\n            \n        case 'FETCH_TO_DO_LISTS':\n            return {...prevState, activeToDOList: action.payload.activeToDOList}\n        \n        case 'CREATE_TODO': \n            console.log('*****  payload create new todo  *****', action.payload)\n            return {...prevState, activeToDOList: [...prevState.activeToDOList, action.payload]};\n    \n        case 'COMPLETE_TODO': \n            console.log('***** id  payload completed todo  *****', action.payload.id)\n            return {...prevState, \n                activeToDOList: prevState.activeToDOList.map(todoList=>{\n                    if (todoList.id===action.payload.id){\n                        return action.payload\n                    }else { return todoList }\n                })};\n        \n        case 'REMOVE_TODO': \n            console.log('***** id payload delete todo  *****', action.payload.id)\n            return {...prevState, activeToDOList: [...prevState.activeToDOList.filter(todoList => todoList.id !== action.payload.id)]};\n        default:\n            return prevState;\n    }\n}\n\nexport default mainFunction\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './NewTodoForm.css';\n\nclass NewTodoForm extends Component {\n    state = {\n        user_id : '',\n        title: '',\n        status: false,\n        dateToDo: '',\n    };\n  \n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    };\n\n    handleAddNewTask = (event) => {\n        \n            event.preventDefault()\n        let data = {\n            user_id :this.props.currentUser.id,\n            title: this.state.title,\n            status: this.state.status,\n            dateToDo: this.state.dateToDo,\n        } \n        console.log('** new task', data)\n        // console.log(\"** new task current user \", this.props)\n        fetch(\"https://sekoudossocalendar.herokuapp.com/api/v1/tasks\", {\n        // fetch(\"http://localhost:3000/api/v1/tasks\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\",\n                      \"Accept\": \"application/json\"},    \n            body: JSON.stringify(data)\n        })\n        .then(resp=>resp.json())\n        .then(data => {\n            if(data.errors){\n                alert(data.errors)} \n            else {\n                alert('Successfully added')}\n                this.props.createNewTodo(data)\n        }) \n        this.setState({\n            user_id : '',\n            title: '',\n            status: false,\n            dateToDo: '',\n        });\n\n    }\n\n    render(){\n        console.log(\"** new task current user \", this.props.currentUser.id)\n\n        return (\n            <div >\n                <form className=\"new-todo-form\" onSubmit={this.handleAddNewTask} >\n                    <input\n                        className=\"new-todo-input\"\n                        type=\"text\"\n                        name='title'\n                        placeholder=\"new task here\"\n                        value={this.state.title}\n                        onChange={this.handleChange} />\n                    <input\n                        className=\"new-todo-date-input\"\n                        type=\"date\"\n                        name='dateToDo'\n                        placeholder=\"select date\"\n                        value={this.state.dateToDo}\n                        onChange={this.handleChange}/>\n                    <button className=\"new-todo-button\" type='Submit' value=\"Submit\" >\n                        submit\n                    </button>\n                    \n                </form>\n            </div>\n        );\n    }\n};\n\n\n\nconst mdp = dispatch => ({\n    createNewTodo: (data) => dispatch({type: \"CREATE_TODO\", payload:(data)}),\n\n});\n\nexport default connect(null, mdp)(NewTodoForm);\n\n","import React, {Component} from 'react';\nimport './TodoListItem.css';\nimport { connect } from 'react-redux';\n\nclass TodoListItem extends Component {\n    handleDelete = () => {\n        // console.log('************this.props.id **********', this.props.id)\n        let id  = this.props.id;              \n        fetch(`https://sekoudossocalendar.herokuapp.com/api/v1/tasks/${id}`, {\n        // fetch(`http://localhost:3000/api/v1/tasks/${id}`, {\n\n            method: \"DELETE\"\n        })\n        .then(resp => resp.json())\n        .then(data => { \n            console.log('delete data id', data.id)\n            this.props.deleteTodo(data)})\n    }\n\n    markAsCompleted = (event) => {\n        event.preventDefault()\n        let id  = this.props.id;              \n        fetch(`https://sekoudossocalendar.herokuapp.com/api/v1/tasks/${id}`, {\n        // fetch(`http://localhost:3000/api/v1/tasks/${id}`, {\n\n            method: 'PATCH',\n            headers: {\"Content-Type\": \"application/json\",\n                      \"Accept\": \"application/json\"},    \n            body: JSON.stringify({status: true}\n            )\n        })\n        .then(resp=>resp.json())\n        .then(data =>  {this.props.completedTask(data)})\n        this.setState({ targetItem: {} }) \n    } \n    \n    handleChange = (event) => {\n        this.setState({\n              [event.target.name]: event.target.value\n        })\n      }\n    render(){\n        // console.log('************this.props.title**********', this.props.title)\n        // console.log('************this.props.date**********', this.props.dateToDo)\n        // console.log('************this.props.id **********', this.props.id)\n        return(\n            <div className=\"todo-item-container\">\n                <h3>{this.props.title}</h3>\n                <h3>{this.props.dateToDo}</h3>\n                <div className=\"buttons-container\">\n                    <button className=\"completed-button\" onClick= {this.markAsCompleted} >\n                        Mark As Completed</button>\n                    <button className=\"remove-button\" onClick={this.handleDelete}>\n                        Remove</button>\n                </div>\n            </div>\n        )\n    }\n};\nconst mdp = dispatch => ({\n    deleteTodo: (data) => dispatch({type: \"REMOVE_TODO\", payload:(data)}),\n    completedTask: (data) => dispatch({type: \"COMPLETE_TODO\", payload:(data)}),\n});\n\nexport default connect(null, mdp)(TodoListItem);\n","import React,{Component} from 'react';\nimport { connect } from 'react-redux';\nimport { fetchToDoLists } from '../mainStore'\nimport NewTodoForm from './NewTodoForm';\nimport TodoListItem from './TodoListItem';\nimport './TodoList.css';\n\nclass TodoList extends Component{\n\n    componentDidMount(){\n        this.props.fetchTodos()\n      } \n\n    render(){\n        console.log(\"**************** todolist activeToDOList ********\",this.props.activeToDOList)\n\n        return(\n            <div className=\"list-wrapper\">\n\n                <NewTodoForm currentUser={this.props.currentUser} />\n                {this.props.activeToDOList\n                .filter(todoList  => todoList.user_id === this.props.currentUser.id )\n                .filter(todoList  => todoList.status === false )\n                .map(todo => <TodoListItem {...todo} />)}\n\n            </div>\n        )\n    }\n};\n\nconst msp = state => ({\n    activeToDOList: state.activeToDOList,\n\n});\n\nconst mdp = dispatch => {\n    return {\n        fetchTodos: () => dispatch(fetchToDoLists()),\n    }\n}\n  \nexport default connect(msp, mdp)(TodoList);","import React, {Component} from 'react';\nimport './TodoListItem.css';\n\nclass CompleteTodoListItem extends Component {\n    \n    render(){\n        return(\n            <div className=\"complete-todo-item-container\">\n                <h3> THIS TASK HAS BEEN COMPLETED</h3>\n                <h3>TITLE: {this.props.title}</h3>\n                <h3>COMPLETE DATE: {this.props.dateToDo}</h3>\n                \n            </div>\n        )\n    }\n};\n\n\nexport default CompleteTodoListItem;\n\n","import React,{Component} from 'react';\nimport { connect } from 'react-redux';\nimport { fetchToDoLists } from '../mainStore'\nimport  CompleteTodoListItem from './CompleteTodoListItem';\nimport './TodoList.css';\n\nclass TodoListComplete extends Component{\n    \n    componentDidMount(){\n        this.props.fetchTodos()\n      } \n    render(){\n        console.log('**************** todolist complete currentUser********',this.props.currentUser)\n\n        return(\n            <div className=\"list-wrapper\">\n                \n                {this.props.activeToDOList\n                .filter(todoList  => todoList.user_id === this.props.currentUser.id )\n                .filter(todoList  => todoList.status === true )\n                .map(todo => <CompleteTodoListItem {...todo} />)}\n            </div>\n        )\n    }\n};\n\nconst msp = state => ({\n    activeToDOList: state.activeToDOList,\n});\n\nconst mdp = dispatch => {\n    return {\n        fetchTodos: () => dispatch(fetchToDoLists()),\n    }\n}\n  \nexport default connect(msp, mdp)(TodoListComplete);","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction UserController(props){\n  return (\n    <div className=\"user-controls\">\n      <button onClick={props.logout}>\n        \n          {props.currentUser ? \n            \"LOG OUT\":\n            <div>\n              <Link to=\"/login\"><button className=\"login\">LOG IN</button></Link>\n            </div>\n            \n          }\n        \n      </button>\n    </div>\n  )\n}\nexport default UserController\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport UserController from './todos/UserController';\n\n\nfunction NavBar(props){\n    console.log('**************** nav bar currentUser********', props.currentUser)\n\n  return (\n   <div className=\"  fixed-top navbar\" >\n   \n          \n            <Link to=\"/\">\n                <div className=\"navCLass \" >Home</div>\n            </Link>\n          \n            <Link to=\"/complete\">\n                <div className=\"navCLass \" >Complete Tasks</div>\n            </Link>\n                \n                <div className=\"navCLass\"> \n                <UserController  logout={props.logout} currentUser={props.currentUser} /> </div>\n\n          \n      </div>\n      \n  )\n}\nexport default NavBar\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nclass LoginForm extends React.Component {\n\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    fetch(\"https://sekoudossocalendar.herokuapp.com/api/v1/login\", {\n    // fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(this.state)\n    })\n    .then(res => res.json())\n    .then(response => {\n\n      if (response.errors){\n        alert(response.errors)\n      } else {\n        this.props.setUser(response)\n      }\n    })\n    // this.setState({\n    //     username: \"\",\n    //     password: \"\"\n    //   })\n\n  }\n\n  render(){\n    return (\n      \n      \n      <form className=\"formLogin\" onSubmit={this.handleSubmit}>\n              <div class=\"form-row loginMainDiv\">\n                  <div className=\"\">\n                    <h1 className='salut'> Hi {this.state.username}</h1>\n                    <input className=\"form-control loginInput formInput\" placeholder=\"username\" name=\"username\" \n                      value={this.state.username} \n                      onChange={this.handleChange} placeholder=\"username\"/>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <input className=\"form-control loginInput formInput\" placeholder=\"password\" name=\"password\" \n                      value={this.state.password} type=\"password\"  \n                      onChange={this.handleChange} placeholder=\"password\"/>\n                  </div>\n              <br></br>\n\n              </div>  \n              <div className=\"loginSubmit\">\n                  <button className=\"loginButton\" type=\"submit\">Log In</button>\n              </div>\n              <Link to=\"/signup\"><button className=\"signup\">New User SIGN UP Please</button></Link>\n          </form>\n    \n    )\n  }\n  \n}\n\nexport default LoginForm\n","import React from 'react'\nimport '../App.css';\n\nclass SignupForm extends React.Component {\n\n  state = {\n    username: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (this.state.password === this.state.passwordConfirmation){\n      fetch(\"https://sekoudossocalendar.herokuapp.com/api/v1/users\", {\n    // fetch(\"http://localhost:3000/api/v1/users\", {\n\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({username: this.state.username, \n                              password: this.state.password,\n                             })\n      })\n      .then(res => res.json())\n      .then(response => {\n        \n        if(response.errors){ alert(response.errors)} \n        else {\n          console.log('new signup data id', response.user.id) \n          this.props.setUser(response)\n        }   \n      })   \n    } \n    else {\n        alert(\"Passwords don't match! check for case_sensitive Password should be atlease 3 characters\")\n    }\n      \n    this.setState({\n        username: \"\",\n        password: \"\",\n        passwordConfirmation: \"\",\n        \n    })\n      \n    }\n    \n    render(){\n      return (\n        \n        <form className=\"formLogin\" onSubmit={this.handleSubmit}>\n          <div class=\"form-row loginMainDiv\">\n            <div>       \n              <h1 className='salut'> Hi {this.state.username}</h1>\n              <input className=\"form-control sellItemDivInput\" placeholder=\"username\" name=\"username\" \n                    value={this.state.username} \n                    onChange={this.handleChange}/>\n              \n              <input className=\"form-control sellItemDivInput\" placeholder=\"password\" name=\"password\" \n                    value={this.state.password} type=\"password\"  \n                    onChange={this.handleChange}/>\n             \n              <input className=\"form-control sellItemDivInput\" placeholder=\"passwordConfirmation\" name=\"passwordConfirmation\" \n                    value={this.state.passwordConfirmation} type=\"password\"  \n                    onChange={this.handleChange}/>\n\n              <input className=\"form-control sellItemDivInput\" placeholder=\"email\" name=\"email\" \n                    value={this.state.email} type=\"email\"  \n                    onChange={this.handleChange}/>\n            \n              <input className=\"form-control sellItemDivInput\" placeholder=\"phone\" name=\"phone\" \n                    value={this.state.phone} type=\"phone\"  \n                    onChange={this.handleChange}/>\n              \n              <button className=\"form-control sellItemDivInput\" type=\"submit\">Sign Up</button>\n            </div>\n          </div> \n        </form>\n    )\n  }\n  \n  \n}\n\nexport default SignupForm  \n\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route, } from 'react-router-dom'\nimport TodoList from './todos/TodoList'\nimport TodoListComplete from './todos/TodoListComplete'\nimport { connect } from 'react-redux';\nimport { fetchToDoLists } from './mainStore'\nimport NavBar from './NavBar'\nimport LoginForm from './todos/LoginForm'\nimport SignupForm from './todos/SignupForm'\n\nimport './App.css';\n\nclass App extends Component {\n    state = { \n        currentUser:null ,  \n    }\n\n    componentDidMount(){\n        const token = localStorage.token\n\n        if(token){\n        fetch(\"https://corona-backend1.herokuapp.com/api/v1/auto_login\", {\n                // fetch(\"http://localhost:3000/api/v1/auto_login\", {\n\n            headers: { \"Authorization\": token }\n            })\n            .then(res => res.json())\n            .then(response => {\n                if (response.errors){\n                    alert(response.errors)\n                } else {\n                    this.setState({\n                    currentUser: response}) \n                } \n            })\n        }\n        this.props.fetchAllTodo() \n    }\n    setUser = (response) => {\n        // console.log('response in app component', response.user.username)\n        this.setState({\n          currentUser: response.user\n        }, () => {\n          localStorage.token = response.token\n          this.props.history.push(\"/tasks\")\n        })\n    } \n    logout = () => {\n        this.setState({ \n          currentUser: null\n        }, () => { localStorage.removeItem('token')\n                   this.props.history.push('/login')\n      })\n    }\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n      }\n    render(){\n        // console.log('**************** app currentUser********',this.state.currentUser)\n        // console.log('****************app activeToDOList********',this.props.todolist)\n        return(\n            <>\n                <NavBar fixed=\"top\" currentUser={this.state.currentUser}  logout={this.logout} handleChange={this.handleChange} />\n\n                {this.state.currentUser ? \n                    <div>\n                        <Switch>\n                            <Route path=\"/todolist\" render={() => <TodoList currentUser={this.state.currentUser}/>}/>\n                            <Route path=\"/complete\" render={() => <TodoListComplete currentUser={this.state.currentUser}/>}/>\n                            <Route path=\"/\" render={() => <TodoList currentUser={this.state.currentUser}/>}/>  \n                        </Switch>\n                    </div>\n                    : \n                    <div>\n                        <h1 className=\"warning\"> Please Login or SignUp  </h1>\n                        <Switch>\n                            <Route path=\"/signup\" render={() => <SignupForm  setUser={this.setUser}/>}/>\n                            <Route path=\"/login\" render={routerProps => <LoginForm {...routerProps} setUser={this.setUser}/>}/>\n                        </Switch>\n                    </div>\n                }\n            </>\n\n        )\n    }\n};\n\nfunction msp(state){\n    return {\n      connectTodolist: state.activeToDOList,\n    //   currentUser: state.currentUser\n      \n    }\n  }\n\nconst mdp = dispatch => {\n    return {\n        fetchAllTodo: () => dispatch(fetchToDoLists()), \n        loginUser: (data) =>  dispatch({type: \"LOGIN_USER\", payload:(data)}),\n        logoutUser: (data) =>  dispatch({type: \"LOGOUT_USER\", payload:(data)}),\n\n    }\n  }\n\nexport default connect(msp, mdp)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore, applyMiddleware } from 'redux' ;\nimport { Provider } from 'react-redux';\nimport mainStore from './mainStore';\nimport thunk from 'redux-thunk';\n\nlet store = createStore (mainStore, applyMiddleware(thunk))\n\nReactDOM.render(\n    <Provider store={store} >\n        <Router>\n            <Route path='/' component={App} />\n        </Router>\n    </Provider>,\n    document.getElementById('root'),\n);"],"sourceRoot":""}